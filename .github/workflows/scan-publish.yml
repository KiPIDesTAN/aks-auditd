name: Scan and Publish Docker Image

on:
  [ push ]
  #   branches: [ main ]
  #   # Publish semver tags as releases.
  #   tags: [ 'v*.*.*' ]
  # pull_request:
  #     branches: [ main ]


env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  TEST_TAG: test  # Tag for testing the image

jobs:
  govulncheck_job:
    runs-on: ubuntu-latest
    name: Run govulncheck
    steps:
      - id: govulncheck
        uses: golang/govulncheck-action@v1
        with:
           work-dir: src
           go-version-file: src/go.mod
           cache: false
  
  build_job:
    name: Build and Test Docker Image
    needs: govulncheck_job
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write # needed for signing the images with GitHub OIDC Token

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Cosign
        if: ${{ github.event_name != 'pull_request' }}
        uses: sigstore/cosign-installer@v3.6.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO_NAME }}


      - name: Clean Repository Name
        id: toLowerCase
        run: echo "REPO_NAME=${REPO_NAME,,}" >> "${GITHUB_ENV}"
        env:
          REPO_NAME: ${{ github.repository }}

      - name: Build Image
        uses: docker/build-push-action@v6
        with: 
          load: true
          push: false
          tags: ${{ env.REGISTRY }}/${{ env.REPO_NAME }}:${{ env.TEST_TAG }}

      - name: Run Trivy Vulnerability Scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: '${{ env.REGISTRY }}/${{ env.REPO_NAME }}:${{ env.TEST_TAG }}'
          format: 'table'

      - name: Build and push
        if: ${{ github.event_name != 'pull_request' }}
        id: push-step
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: false
          #sbom: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          #|
          #  ${{ env.REGISTRY }}/${{ env.REPO_NAME }}:${{ github.sha }}
          #  ${{ env.REGISTRY }}/${{ env.REPO_NAME }}:latest

      # - name: Print cosign version
      #   if: ${{ github.event_name != 'pull_request' }}
      #   run: cosign version

      # - name: Sign the container image
      #   if: ${{ github.event_name != 'pull_request' }}
      #   run: cosign sign -y ${{ env.REGISTRY }}/${{ env.REPO_NAME }}:${{ github.sha }}@${{ steps.push-step.outputs.digest }} ${{ env.REGISTRY }}/${{ env.REPO_NAME }}:latest@${{ steps.push-step.outputs.digest }}
  